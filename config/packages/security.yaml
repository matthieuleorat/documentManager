security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        db_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
#        login:
#            pattern:  ^/api/login
#            stateless: true
#            anonymous: true
#            provider: db_provider
#            form_login:
#                check_path: /api/login_check
#                username_parameter: _username
#                password_parameter: _password
#                success_handler: lexik_jwt_authentication.handler.authentication_success
#                failure_handler: lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false
#
#        main:
#            pattern:   ^/api
#            provider: db_provider
#            stateless: true
#            anonymous: true
#            lexik_jwt: ~

        admin:
            provider: db_provider # Use any declared provider above
            form_login:
                login_path: /admin/login
                check_path: /admin/login
                default_target_path: /admin
            anonymous: true
            logout:
                path:   /admin/logout
                target: /admin/login
            remember_me:
                secret:   '%env(APP_SECRET)%'
                lifetime: 604800 # 1 week in seconds
                path:     /admin

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false


    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/,       roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin,       roles: IS_AUTHENTICATED_FULLY }
